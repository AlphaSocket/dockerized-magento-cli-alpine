project:
  title: &project_title Alphasocket/dockerized-magento-cli-alpine
  codename: &project_codename magento-cli-alpine
  description: Alpine container with all dependencies to manage a magento installation (crons included)

#
# Build process
# Creates dockerfile and file used in it
#
build:
  envvars:
    name: *project_codename
    # Docker
    from: alpine:latest
    cmd: "/usr/sbin/crond -f -l $CONFIG_CRON_LOG_LEVEL"

#
# Setup process injected in dockerfile
#
setup:
  # Setup env
  envvars:
    dependencies:
      management: bash htop curl git mysql-client
      php: php5 php5-phar php5-soap php5-iconv php5-xml php5-json php5-zlib php5-gd php5-ctype php5-gd php5-pdo_mysql php5-dom php5-mcrypt php5-curl php5-openssl php5-opcache
      #security: python py-pip
      develop: 
        valueFromCommand: '[ "$BUILD_ENV" = "$GENERAL_KEYS_DEV" ] && echo "nodejs nodejs-npm" || echo ""'
      runtime: 
        valueFromParse:  $SETUP_DEPENDENCIES_MANAGEMENT $SETUP_DEPENDENCIES_DEVELOP $SETUP_DEPENDENCIES_SECURITY $SETUP_DEPENDENCIES_PHP
    paths:
      binaries: /usr/local/bin
    urls:
      magerun: https://files.magerun.net/n98-magerun-latest.phar
      composer: https://getcomposer.org/composer.phar
      wpcli: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
      mageconfigsync: https://github.com/punkstar/mageconfigsync/releases/download/0.4.0/mageconfigsync-0.4.0.phar
      modman: https://raw.githubusercontent.com/colinmollenhour/modman/master/modman
  # Setup Processes
  processes:
    - title: "Link php"
      commands:
        - ln -s $(which php5) /usr/bin/php

    - title: "Setup bin folder"
      commands:
        - mkdir -p $SETUP_PATHS_BINARIES
        #- chown $CONFIG_USER:$CONFIG_GROUP $CONFIG_PATHS_BINARIES

    - title: "Download binaries"
      commands:
       - curl -o $SETUP_PATHS_BINARIES/n98-magerun.phar $SETUP_URLS_MAGERUN
       - curl -o $SETUP_PATHS_BINARIES/composer.phar $SETUP_URLS_COMPOSER
       - curl -o $SETUP_PATHS_BINARIES/wp-cli.phar $SETUP_URLS_WPCLI
       - curl -o $SETUP_PATHS_BINARIES/mageconfigsync.phar $SETUP_URLS_MAGECONFIGSYNC
       - curl -o $SETUP_PATHS_BINARIES/modman $SETUP_URLS_MODMAN
       - chmod -R +x $SETUP_PATHS_BINARIES

#
# Config process run just before the entrypoint
#
config:
  # Config env
  envvars:
    groups:
      main:
        id: 1100
        name: 'magento'
    users:
      main: 
        id: 1100
        name: 'magento-cli'
        groups: 'magento'
    group: 
      valueFromParse: $CONFIG_GROUPS_MAIN_NAME
    user:
      valueFromParse: $CONFIG_USERS_MAIN_NAME
    paths:
      webroot: /var/www/html
      binaries:
        valueFromParse: $SETUP_PATHS_BINARIES
    cron:
      log:
        level: 8

  processes:
    
    - title: "Setup bin folder"
      commands:
        - mkdir -p $CONFIG_PATHS_BINARIES
        #- chown $CONFIG_USER:$CONFIG_GROUP $CONFIG_PATHS_BINARIES

    - title: "Set bin executable"
      commands:
        - chmod +x -R $CONFIG_PATHS_BINARIES

    - title: "Setup crontab to update binaries"
      commands:
        - echo "#!/bin/sh\n$(which n98-magerun.phar) self-update" > /etc/periodic/daily/update-n98-magerun
        - echo "#!/bin/sh\n$(which composer.phar) self-update" > /etc/periodic/daily/update-composer
        - echo "#!/bin/sh\n$(which wp-cli.phar) self-update" > /etc/periodic/daily/update-wp-cli

test:
  processes:
    #
    # Starting
    #
    - title: "Starting magento-cli container"
      commands:
        - TEST_CONTAINER_MAGENTO_CLI_ID=$(
            docker run
              -d --name=$TEST_CONTAINER_NAME
              ${BUILD_USER}/${BUILD_NAME}:${BUILD_VERSION}
          )
        - TEST_CONTAINER_MAGENTO_CLI_STATUS=$(sleep 5 && docker inspect -f '{{.State.Running}}' $TEST_CONTAINER_MAGENTO_CLI_ID)

    - title: "Testing magento-cli container"
      shell_condition: '"$TEST_CONTAINER_MAGENTO_CLI_STATUS" = "true"'
      commands:
        - echo "### Test Succeeded\n"
      else:
        - echo "Magento-cli container failed, print logs and exiting\n"
        - docker logs $TEST_CONTAINER_MAGENTO_CLI_ID
